<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace = "customplan">
	<resultMap type="customDto" id="customMap">
		<result property="plan_num" column="PLAN_NUM"/>
		<result property="plan_title" column="PLAN_TITLE"/>
		<result property="plan_content" column="PLAN_CONTENT"/>
		<result property="plan_writer" column="PLAN_WRITER"/>
		<result property="plan_regdate" column="PLAN_REGDATE"/>
		<result property="plan_tendency" column="PLAN_TENDENCY"/>
		<result property="plan_views" column="PLAN_VIEWS"/>
		<result property="plan_push" column="PLAN_PUSH"/>
		<result property="plan_hide" column="PLAN_HIDE"/>
	</resultMap>
	
	<!-- 마이페이지 내가 작성한 게시글 총 갯수 페이징 -->
  	<select id="listCount" resultType="int">
		SELECT COUNT(PLAN_NUM)
		FROM OLLE_PLAN
		WHERE PLAN_NUM > 0	
	</select>
	 <!-- 마이페이지 내가 작성한 게시글 총 갯수 페이징 끝 -->
    
    <!-- 마이페이지 내가 작성한 게시글 조회  페이징 -->
     <select id="mywritelist" parameterType="Map" resultMap="customMap">
      SELECT * 
      FROM (
            SELECT ROW_NUMBER() OVER(ORDER BY PLAN_NUM DESC) NUM,
            PLAN_NUM, PLAN_TITLE, PLAN_TENDENCY, PLAN_TERM, PLAN_VIEWS, PLAN_PUSH
            FROM OLLE_PLAN
            WHERE PLAN_HIDE = 0 AND PLAN_WRITER = #{plan_writer}
            ORDER BY PLAN_NUM DESC
            )
      WHERE NUM BETWEEN #{rowStart} AND #{rowEnd}
     </select>
     <!-- 마이페이지 내가 작성 -->
  	
  	<select id="maxNum" resultType="int">
		SELECT MAX(PLAN_NUM)
		FROM OLLE_PLAN
	</select>
	
	<select id="countAll" resultType="int">
		SELECT COUNT(*)
		FROM OLLE_PLAN
	</select>
	
	<select id="count" parameterType="string" resultType="int">
		SELECT COUNT(*)
		FROM OLLE_PLAN
		WHERE PLAN_TITLE = #{search} OR PLAN_CONTENT = #{search}
	</select>
	
	<select id="selectAll" parameterType="int" resultMap="customMap">
		SELECT *
		FROM (
			SELECT ROWNUM AS RNUM, P.*
			FROM (
				SELECT PLAN_NUM, PLAN_TITLE, PLAN_TENDENCY, PLAN_TERM, PLAN_VIEWS, PLAN_PUSH
				FROM OLLE_PLAN
				WHERE PLAN_HIDE = 0
				ORDER BY TO_NUMBER(PLAN_NUM) DESC
			) P
		)
		<![CDATA[WHERE RNUM <= #{pageN} AND RNUM > #{pageP}]]>
		ORDER BY PLAN_NUM DESC
	</select>
	
	<select id="selectList" resultMap="customMap">
		SELECT *
		FROM (
			SELECT ROWNUM AS RNUM, P.*
			FROM (
				SELECT PLAN_NUM, PLAN_TITLE, PLAN_TENDENCY, PLAN_VIEWS, PLAN_PUSH
				FROM OLLE_PLAN
				WHERE PLAN_HIDE = 0 AND ((INSTR(PLAN_TITLE, #{search}) > 0) OR (INSTR(PLAN_CONTENT, #{search}) > 0))
				ORDER BY TO_NUMBER(PLAN_NUM) DESC
			) P
		)
		<![CDATA[WHERE RNUM <= #{pageN} AND RNUM > #{pageP}]]>
		ORDER BY PLAN_NUM DESC
	</select>
	
	<select id="selectOne" parameterType="int" resultType="customDto">
		SELECT *
		FROM OLLE_PLAN
		WHERE PLAN_NUM =#{plan_num}
	</select>
	
	<insert id="insert" parameterType="customDto">
		INSERT INTO OLLE_PLAN
		VALUES(#{plan_num}, #{plan_title}, #{plan_content}, #{plan_writer}, SYSDATE, #{plan_tendency}, #{plan_term}, 0, 0, 0)
	</insert>
	
	<update id="cusUpdate" parameterType="customDto">
		UPDATE OLLE_PLAN
		SET PLAN_TITLE =#{plan_title} ,PLAN_CONTENT= #{plan_content}, PLAN_TENDENCY = #{plan_tendency}, PLAN_TERM = #{plan_term}
		WHERE PLAN_NUM = #{plan_num}
	</update>
	
	<update id="update_hide" parameterType="int">
		UPDATE OLLE_PLAN
		SET PLAN_HIDE = 0
		WHERE PLAN_NUM = #{plan_num}
	</update>
	
	<update id="viewsUpdate" parameterType="int">
		UPDATE OLLE_PLAN
		SET PLAN_VIEWS = PLAN_VIEWS + 1
		WHERE PLAN_NUM = #{PLAN_NUM}
	</update>
	
	<update id="likeUpdate" parameterType="int">
		UPDATE OLLE_PLAN
		SET PLAN_PUSH = PLAN_PUSH + 1
		WHERE PLAN_NUM = #{PLAN_NUM}
	</update>
	
	<delete id="delete" parameterType="int">
		DELETE FROM OLLE_PLAN
		WHERE PLAN_NUM = #{plan_num}
	</delete>
</mapper>